// <auto-generated />
using Datos.Persistencia.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Datos.Persistencia.Core.Migrations
{
    [DbContext(typeof(ContextoPrincipal))]
    [Migration("20221114024239_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dominio.Core.autores", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("autores");
                });

            modelBuilder.Entity("Dominio.Core.autoresHasLibros", b =>
                {
                    b.Property<int>("autoresId")
                        .HasColumnType("int");

                    b.Property<int>("librosIsbn")
                        .HasColumnType("int");

                    b.HasKey("autoresId", "librosIsbn");

                    b.HasIndex("librosIsbn");

                    b.ToTable("autores_has_libros");
                });

            modelBuilder.Entity("Dominio.Core.editoriales", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("sede")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("id");

                    b.ToTable("editoriales");
                });

            modelBuilder.Entity("Dominio.Core.libros", b =>
                {
                    b.Property<int>("isbn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("editorialesId")
                        .HasColumnType("int");

                    b.Property<int>("nPagina")
                        .HasColumnType("int");

                    b.Property<string>("sinopsis")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("isbn");

                    b.HasIndex("editorialesId");

                    b.ToTable("libros");
                });

            modelBuilder.Entity("Dominio.Core.autoresHasLibros", b =>
                {
                    b.HasOne("Dominio.Core.autores", "autor")
                        .WithMany("autoreshaslibros")
                        .HasForeignKey("autoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Core.libros", "libro")
                        .WithMany("autoreshaslibros")
                        .HasForeignKey("librosIsbn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("autor");

                    b.Navigation("libro");
                });

            modelBuilder.Entity("Dominio.Core.libros", b =>
                {
                    b.HasOne("Dominio.Core.editoriales", null)
                        .WithMany("libros")
                        .HasForeignKey("editorialesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.Core.autores", b =>
                {
                    b.Navigation("autoreshaslibros");
                });

            modelBuilder.Entity("Dominio.Core.editoriales", b =>
                {
                    b.Navigation("libros");
                });

            modelBuilder.Entity("Dominio.Core.libros", b =>
                {
                    b.Navigation("autoreshaslibros");
                });
#pragma warning restore 612, 618
        }
    }
}
